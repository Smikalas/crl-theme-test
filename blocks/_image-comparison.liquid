{%- style -%}
  .image-comparison {
    --slider-width: 2px;
    --handle-size: 40px;
    position: relative;
    padding: 0;
    margin: 0 auto;
    max-width: {{ block.settings.width }}px;
  }

  .image-comparison__wrapper {
    position: relative;
    overflow: hidden;
    border-radius: var(--style-border-radius);
  }

  .image-comparison__before,
  .image-comparison__after {
    width: 100%;
    max-width: 100%;
    margin: 0;
    padding: 0;
  }

  .image-comparison__before {
    position: absolute;
    inset: 0;
    clip-path: inset(0 var(--clip-position, 50%) 0 0);
  }

  .image-comparison__slider {
    position: absolute;
    inset: 0;
    cursor: grab;
    margin: 0;
  }

  .image-comparison__handle {
    position: absolute;
    top: 50%;
    left: var(--clip-position, 50%);
    width: var(--handle-size);
    height: var(--handle-size);
    transform: translate(-50%, -50%);
    border-radius: 50%;
    background: rgb(var(--color-foreground) / 0.9);
    pointer-events: none;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .image-comparison__handle-icon {
    width: 18px;
    height: 18px;
    color: rgb(var(--color-background));
  }

  .image-comparison__divider {
    position: absolute;
    top: 0;
    bottom: 0;
    left: var(--clip-position, 50%);
    width: var(--slider-width);
    background: rgb(var(--color-foreground) / 0.9);
    transform: translateX(-50%);
    pointer-events: none;
  }

  .image-comparison__labels {
    position: absolute;
    inset: 0;
    pointer-events: none;
  }

  .image-comparison__label {
    position: absolute;
    top: var(--padding-xs);
    background: rgb(var(--color-foreground) / 0.9);
    color: rgb(var(--color-background));
    padding: 0.25em 0.75em;
    border-radius: 3px;
    font-size: 0.875em;
  }

  .image-comparison__label--before {
    right: calc(50% + 10px);
  }

  .image-comparison__label--after {
    left: calc(50% + 10px);
  }

  @media (max-width: 750px) {
    .image-comparison__label {
      font-size: 0.75em;
    }
  }

  .image-comparison__slider:active {
    cursor: grabbing;
  }

  @media (prefers-reduced-motion: no-preference) {
    .image-comparison__before {
      transition: clip-path 0.1s ease-out;
    }
    
    .image-comparison__handle,
    .image-comparison__divider {
      transition: left 0.1s ease-out;
    }

    .image-comparison__label {
      transition: 
        left 0.1s ease-out,
        right 0.1s ease-out,
        opacity 0.2s ease-out;
    }
  }
{%- endstyle -%}

<script>
  class ImageComparison extends HTMLElement {
    constructor() {
      super();
      this.slider = this.querySelector('[data-slider]');
      this.before = this.querySelector('[data-before]');
      this.handle = this.querySelector('[data-handle]');
      this.divider = this.querySelector('[data-divider]');
      this.labelBefore = this.querySelector('[data-label-before]');
      this.labelAfter = this.querySelector('[data-label-after]');
      this.isDragging = false;
      this.startX = 0;
      this.sliderLeft = 0;

      this.#addEventListeners();
    }

    #addEventListeners() {
      this.slider.addEventListener('mousedown', this.#startDragging.bind(this));
      this.slider.addEventListener('touchstart', this.#startDragging.bind(this));
      window.addEventListener('mousemove', this.#drag.bind(this));
      window.addEventListener('touchmove', this.#drag.bind(this));
      window.addEventListener('mouseup', this.#stopDragging.bind(this));
      window.addEventListener('touchend', this.#stopDragging.bind(this));
    }

    #startDragging(e) {
      this.isDragging = true;
      this.startX = e.type === 'mousedown' ? e.pageX : e.touches[0].pageX;
      this.sliderLeft = this.slider.getBoundingClientRect().left + window.scrollX;
    }

    #stopDragging() {
      this.isDragging = false;
    }

    #drag(e) {
      if (!this.isDragging) return;

      e.preventDefault();
      const x = e.type === 'mousemove' ? e.pageX : e.touches[0].pageX;
      const walk = x - this.startX;
      const sliderRect = this.slider.getBoundingClientRect();
      const newPosition = ((x - this.sliderLeft) / sliderRect.width) * 100;

      const position = Math.min(Math.max(newPosition, 0), 100);
      
      this.style.setProperty('--clip-position', `${100 - position}%`);

      // Update label visibility
      if (position < 25) {
        this.labelBefore.style.opacity = '0';
      } else {
        this.labelBefore.style.opacity = '1';
      }

      if (position > 75) {
        this.labelAfter.style.opacity = '0';
      } else {
        this.labelAfter.style.opacity = '1';
      }
    }
  }

  customElements.define('image-comparison', ImageComparison);
</script>

<image-comparison class="image-comparison">
  <div class="image-comparison__wrapper">
    {% if block.settings.image_after != blank and block.settings.image_before != blank %}
      <div class="image-comparison__after">
        {{ block.settings.image_after | image_url: width: block.settings.width | image_tag }}
      </div>
      <div class="image-comparison__before" data-before>
        {{ block.settings.image_before | image_url: width: block.settings.width | image_tag }}
      </div>
      <div class="image-comparison__slider" data-slider>
        <div class="image-comparison__handle" data-handle>
          <svg class="image-comparison__handle-icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M3 12H21M3 12L7 8M3 12L7 16M21 12L17 8M21 12L17 16" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </div>
        <div class="image-comparison__divider" data-divider></div>
        <div class="image-comparison__labels">
          <div class="image-comparison__label image-comparison__label--before" data-label-before>
            {{ block.settings.label_before | escape }}
          </div>
          <div class="image-comparison__label image-comparison__label--after" data-label-after>
            {{ block.settings.label_after | escape }}
          </div>
        </div>
      </div>
    {% else %}
      <div class="placeholder">
        {{ 'image' | placeholder_svg_tag: 'placeholder-svg' }}
      </div>
    {% endif %}
  </div>
</image-comparison>

{% schema %}
{
  "name": "Image Comparison",
  "target": "section",
  "settings": [
    {
      "type": "image_picker",
      "id": "image_before",
      "label": "Before image"
    },
    {
      "type": "image_picker",
      "id": "image_after",
      "label": "After image"
    },
    {
      "type": "text",
      "id": "label_before",
      "label": "Before label",
      "default": "Before"
    },
    {
      "type": "text",
      "id": "label_after",
      "label": "After label",
      "default": "After"
    },
    {
      "type": "range",
      "id": "width",
      "label": "Width",
      "min": 400,
      "max": 1600,
      "step": 100,
      "default": 1000,
      "unit": "px"
    }
  ]
}
{% endschema %}
